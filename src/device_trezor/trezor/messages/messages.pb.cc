// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

#ifdef minor
#undef minor
#endif

namespace hw {
namespace trezor {
namespace messages {
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace protobuf_messages_2eproto {
void InitDefaults() {
}

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016messages.proto\022\022hw.trezor.messages\032 go"
      "ogle/protobuf/descriptor.proto*\266>\n\013Messa"
      "geType\022$\n\026MessageType_Initialize\020\000\032\010\220\265\030\001"
      "\260\265\030\001\022\032\n\020MessageType_Ping\020\001\032\004\220\265\030\001\022\035\n\023Mess"
      "ageType_Success\020\002\032\004\230\265\030\001\022\035\n\023MessageType_F"
      "ailure\020\003\032\004\230\265\030\001\022\037\n\025MessageType_ChangePin\020"
      "\004\032\004\220\265\030\001\022 \n\026MessageType_WipeDevice\020\005\032\004\220\265\030"
      "\001\022 \n\026MessageType_GetEntropy\020\t\032\004\220\265\030\001\022\035\n\023M"
      "essageType_Entropy\020\n\032\004\230\265\030\001\022 \n\026MessageTyp"
      "e_LoadDevice\020\r\032\004\220\265\030\001\022!\n\027MessageType_Rese"
      "tDevice\020\016\032\004\220\265\030\001\022\036\n\024MessageType_Features\020"
      "\021\032\004\230\265\030\001\022&\n\034MessageType_PinMatrixRequest\020"
      "\022\032\004\230\265\030\001\022*\n\030MessageType_PinMatrixAck\020\023\032\014\220"
      "\265\030\001\260\265\030\001\300\265\030\001\022 \n\022MessageType_Cancel\020\024\032\010\220\265\030"
      "\001\260\265\030\001\022\"\n\030MessageType_ClearSession\020\030\032\004\220\265\030"
      "\001\022#\n\031MessageType_ApplySettings\020\031\032\004\220\265\030\001\022#"
      "\n\031MessageType_ButtonRequest\020\032\032\004\230\265\030\001\022\'\n\025M"
      "essageType_ButtonAck\020\033\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022 \n\026"
      "MessageType_ApplyFlags\020\034\032\004\220\265\030\001\022\"\n\030Messag"
      "eType_BackupDevice\020\"\032\004\220\265\030\001\022$\n\032MessageTyp"
      "e_EntropyRequest\020#\032\004\230\265\030\001\022 \n\026MessageType_"
      "EntropyAck\020$\032\004\220\265\030\001\022\'\n\035MessageType_Passph"
      "raseRequest\020)\032\004\230\265\030\001\022+\n\031MessageType_Passp"
      "hraseAck\020*\032\014\220\265\030\001\260\265\030\001\300\265\030\001\022$\n\032MessageType_"
      "RecoveryDevice\020-\032\004\220\265\030\001\022!\n\027MessageType_Wo"
      "rdRequest\020.\032\004\230\265\030\001\022\035\n\023MessageType_WordAck"
      "\020/\032\004\220\265\030\001\022!\n\027MessageType_GetFeatures\0207\032\004\220"
      "\265\030\001\022#\n\031MessageType_SetU2FCounter\020\?\032\004\220\265\030\001"
      "\022\037\n\025MessageType_SdProtect\020O\032\004\220\265\030\001\022\'\n\035Mes"
      "sageType_GetNextU2FCounter\020P\032\004\220\265\030\001\022$\n\032Me"
      "ssageType_NextU2FCounter\020Q\032\004\230\265\030\001\022$\n\032Mess"
      "ageType_ChangeWipeCode\020R\032\004\220\265\030\001\0225\n-Messag"
      "eType_Deprecated_PassphraseStateRequest\020"
      "M\032\002\010\001\0221\n)MessageType_Deprecated_Passphra"
      "seStateAck\020N\032\002\010\001\022\'\n\031MessageType_Firmware"
      "Erase\020\006\032\010\220\265\030\001\270\265\030\001\022(\n\032MessageType_Firmwar"
      "eUpload\020\007\032\010\220\265\030\001\270\265\030\001\022)\n\033MessageType_Firmw"
      "areRequest\020\010\032\010\230\265\030\001\270\265\030\001\022\"\n\024MessageType_Se"
      "lfTest\020 \032\010\220\265\030\001\270\265\030\001\022\"\n\030MessageType_GetPub"
      "licKey\020\013\032\004\220\265\030\001\022\037\n\025MessageType_PublicKey\020"
      "\014\032\004\230\265\030\001\022\034\n\022MessageType_SignTx\020\017\032\004\220\265\030\001\022\037\n"
      "\025MessageType_TxRequest\020\025\032\004\230\265\030\001\022\033\n\021Messag"
      "eType_TxAck\020\026\032\004\220\265\030\001\022 \n\026MessageType_GetAd"
      "dress\020\035\032\004\220\265\030\001\022\035\n\023MessageType_Address\020\036\032\004"
      "\230\265\030\001\022!\n\027MessageType_SignMessage\020&\032\004\220\265\030\001\022"
      "#\n\031MessageType_VerifyMessage\020\'\032\004\220\265\030\001\022&\n\034"
      "MessageType_MessageSignature\020(\032\004\230\265\030\001\022$\n\032"
      "MessageType_CipherKeyValue\020\027\032\004\220\265\030\001\022&\n\034Me"
      "ssageType_CipheredKeyValue\0200\032\004\230\265\030\001\022\"\n\030Me"
      "ssageType_SignIdentity\0205\032\004\220\265\030\001\022$\n\032Messag"
      "eType_SignedIdentity\0206\032\004\230\265\030\001\022\'\n\035MessageT"
      "ype_GetECDHSessionKey\020=\032\004\220\265\030\001\022$\n\032Message"
      "Type_ECDHSessionKey\020>\032\004\230\265\030\001\022 \n\026MessageTy"
      "pe_CosiCommit\020G\032\004\220\265\030\001\022$\n\032MessageType_Cos"
      "iCommitment\020H\032\004\230\265\030\001\022\036\n\024MessageType_CosiS"
      "ign\020I\032\004\220\265\030\001\022#\n\031MessageType_CosiSignature"
      "\020J\032\004\230\265\030\001\022/\n\035MessageType_DebugLinkDecisio"
      "n\020d\032\014\240\265\030\001\260\265\030\001\300\265\030\001\022+\n\035MessageType_DebugLi"
      "nkGetState\020e\032\010\240\265\030\001\260\265\030\001\022$\n\032MessageType_De"
      "bugLinkState\020f\032\004\250\265\030\001\022#\n\031MessageType_Debu"
      "gLinkStop\020g\032\004\240\265\030\001\022\"\n\030MessageType_DebugLi"
      "nkLog\020h\032\004\250\265\030\001\022)\n\037MessageType_DebugLinkMe"
      "moryRead\020n\032\004\240\265\030\001\022%\n\033MessageType_DebugLin"
      "kMemory\020o\032\004\250\265\030\001\022*\n MessageType_DebugLink"
      "MemoryWrite\020p\032\004\240\265\030\001\022)\n\037MessageType_Debug"
      "LinkFlashErase\020q\032\004\240\265\030\001\022&\n\033MessageType_De"
      "bugLinkLayout\020\251F\032\004\250\265\030\001\022,\n!MessageType_De"
      "bugLinkReseedRandom\020\252F\032\004\240\265\030\001\022,\n!MessageT"
      "ype_DebugLinkRecordScreen\020\253F\032\004\240\265\030\001\022(\n\035Me"
      "ssageType_DebugLinkShowText\020\254F\032\004\240\265\030\001\022+\n "
      "MessageType_DebugLinkEraseSdCard\020\255F\032\004\240\265\030"
      "\001\022+\n MessageType_EthereumGetPublicKey\020\302\003"
      "\032\004\220\265\030\001\022(\n\035MessageType_EthereumPublicKey\020"
      "\303\003\032\004\230\265\030\001\022(\n\036MessageType_EthereumGetAddre"
      "ss\0208\032\004\220\265\030\001\022%\n\033MessageType_EthereumAddres"
      "s\0209\032\004\230\265\030\001\022$\n\032MessageType_EthereumSignTx\020"
      ":\032\004\220\265\030\001\022\'\n\035MessageType_EthereumTxRequest"
      "\020;\032\004\230\265\030\001\022#\n\031MessageType_EthereumTxAck\020<\032"
      "\004\220\265\030\001\022)\n\037MessageType_EthereumSignMessage"
      "\020@\032\004\220\265\030\001\022+\n!MessageType_EthereumVerifyMe"
      "ssage\020A\032\004\220\265\030\001\022.\n$MessageType_EthereumMes"
      "sageSignature\020B\032\004\230\265\030\001\022#\n\031MessageType_NEM"
      "GetAddress\020C\032\004\220\265\030\001\022 \n\026MessageType_NEMAdd"
      "ress\020D\032\004\230\265\030\001\022\037\n\025MessageType_NEMSignTx\020E\032"
      "\004\220\265\030\001\022!\n\027MessageType_NEMSignedTx\020F\032\004\230\265\030\001"
      "\022\'\n\035MessageType_NEMDecryptMessage\020K\032\004\220\265\030"
      "\001\022)\n\037MessageType_NEMDecryptedMessage\020L\032\004"
      "\230\265\030\001\022$\n\032MessageType_LiskGetAddress\020r\032\004\220\265"
      "\030\001\022!\n\027MessageType_LiskAddress\020s\032\004\230\265\030\001\022 \n"
      "\026MessageType_LiskSignTx\020t\032\004\220\265\030\001\022\"\n\030Messa"
      "geType_LiskSignedTx\020u\032\004\230\265\030\001\022%\n\033MessageTy"
      "pe_LiskSignMessage\020v\032\004\220\265\030\001\022*\n MessageTyp"
      "e_LiskMessageSignature\020w\032\004\230\265\030\001\022\'\n\035Messag"
      "eType_LiskVerifyMessage\020x\032\004\220\265\030\001\022&\n\034Messa"
      "geType_LiskGetPublicKey\020y\032\004\220\265\030\001\022#\n\031Messa"
      "geType_LiskPublicKey\020z\032\004\230\265\030\001\022&\n\033MessageT"
      "ype_TezosGetAddress\020\226\001\032\004\220\265\030\001\022#\n\030MessageT"
      "ype_TezosAddress\020\227\001\032\004\230\265\030\001\022\"\n\027MessageType"
      "_TezosSignTx\020\230\001\032\004\220\265\030\001\022$\n\031MessageType_Tez"
      "osSignedTx\020\231\001\032\004\230\265\030\001\022(\n\035MessageType_Tezos"
      "GetPublicKey\020\232\001\032\004\220\265\030\001\022%\n\032MessageType_Tez"
      "osPublicKey\020\233\001\032\004\230\265\030\001\022$\n\031MessageType_Stel"
      "larSignTx\020\312\001\032\004\220\265\030\001\022)\n\036MessageType_Stella"
      "rTxOpRequest\020\313\001\032\004\230\265\030\001\022(\n\035MessageType_Ste"
      "llarGetAddress\020\317\001\032\004\220\265\030\001\022%\n\032MessageType_S"
      "tellarAddress\020\320\001\032\004\230\265\030\001\022-\n\"MessageType_St"
      "ellarCreateAccountOp\020\322\001\032\004\220\265\030\001\022\'\n\034Message"
      "Type_StellarPaymentOp\020\323\001\032\004\220\265\030\001\022+\n Messag"
      "eType_StellarPathPaymentOp\020\324\001\032\004\220\265\030\001\022+\n M"
      "essageType_StellarManageOfferOp\020\325\001\032\004\220\265\030\001"
      "\0222\n\'MessageType_StellarCreatePassiveOffe"
      "rOp\020\326\001\032\004\220\265\030\001\022*\n\037MessageType_StellarSetOp"
      "tionsOp\020\327\001\032\004\220\265\030\001\022+\n MessageType_StellarC"
      "hangeTrustOp\020\330\001\032\004\220\265\030\001\022*\n\037MessageType_Ste"
      "llarAllowTrustOp\020\331\001\032\004\220\265\030\001\022,\n!MessageType"
      "_StellarAccountMergeOp\020\332\001\032\004\220\265\030\001\022*\n\037Messa"
      "geType_StellarManageDataOp\020\334\001\032\004\220\265\030\001\022,\n!M"
      "essageType_StellarBumpSequenceOp\020\335\001\032\004\220\265\030"
      "\001\022&\n\033MessageType_StellarSignedTx\020\346\001\032\004\230\265\030"
      "\001\022$\n\031MessageType_CardanoSignTx\020\257\002\032\004\220\265\030\001\022"
      "\'\n\034MessageType_CardanoTxRequest\020\260\002\032\004\230\265\030\001"
      "\022*\n\037MessageType_CardanoGetPublicKey\020\261\002\032\004"
      "\220\265\030\001\022\'\n\034MessageType_CardanoPublicKey\020\262\002\032"
      "\004\230\265\030\001\022(\n\035MessageType_CardanoGetAddress\020\263"
      "\002\032\004\220\265\030\001\022%\n\032MessageType_CardanoAddress\020\264\002"
      "\032\004\230\265\030\001\022#\n\030MessageType_CardanoTxAck\020\265\002\032\004\220"
      "\265\030\001\022&\n\033MessageType_CardanoSignedTx\020\266\002\032\004\230"
      "\265\030\001\022\'\n\034MessageType_RippleGetAddress\020\220\003\032\004"
      "\220\265\030\001\022$\n\031MessageType_RippleAddress\020\221\003\032\004\230\265"
      "\030\001\022#\n\030MessageType_RippleSignTx\020\222\003\032\004\220\265\030\001\022"
      "%\n\032MessageType_RippleSignedTx\020\223\003\032\004\220\265\030\001\0223"
      "\n(MessageType_MoneroTransactionInitReque"
      "st\020\365\003\032\004\230\265\030\001\022/\n$MessageType_MoneroTransac"
      "tionInitAck\020\366\003\032\004\230\265\030\001\0227\n,MessageType_Mone"
      "roTransactionSetInputRequest\020\367\003\032\004\230\265\030\001\0223\n"
      "(MessageType_MoneroTransactionSetInputAc"
      "k\020\370\003\032\004\230\265\030\001\022@\n5MessageType_MoneroTransact"
      "ionInputsPermutationRequest\020\371\003\032\004\230\265\030\001\022<\n1"
      "MessageType_MoneroTransactionInputsPermu"
      "tationAck\020\372\003\032\004\230\265\030\001\0228\n-MessageType_Monero"
      "TransactionInputViniRequest\020\373\003\032\004\230\265\030\001\0224\n)"
      "MessageType_MoneroTransactionInputViniAc"
      "k\020\374\003\032\004\230\265\030\001\022;\n0MessageType_MoneroTransact"
      "ionAllInputsSetRequest\020\375\003\032\004\230\265\030\001\0227\n,Messa"
      "geType_MoneroTransactionAllInputsSetAck\020"
      "\376\003\032\004\230\265\030\001\0228\n-MessageType_MoneroTransactio"
      "nSetOutputRequest\020\377\003\032\004\230\265\030\001\0224\n)MessageTyp"
      "e_MoneroTransactionSetOutputAck\020\200\004\032\004\230\265\030\001"
      "\0228\n-MessageType_MoneroTransactionAllOutS"
      "etRequest\020\201\004\032\004\230\265\030\001\0224\n)MessageType_Monero"
      "TransactionAllOutSetAck\020\202\004\032\004\230\265\030\001\0228\n-Mess"
      "ageType_MoneroTransactionSignInputReques"
      "t\020\203\004\032\004\230\265\030\001\0224\n)MessageType_MoneroTransact"
      "ionSignInputAck\020\204\004\032\004\230\265\030\001\0224\n)MessageType_"
      "MoneroTransactionFinalRequest\020\205\004\032\004\230\265\030\001\0220"
      "\n%MessageType_MoneroTransactionFinalAck\020"
      "\206\004\032\004\230\265\030\001\0226\n+MessageType_MoneroKeyImageEx"
      "portInitRequest\020\222\004\032\004\230\265\030\001\0222\n\'MessageType_"
      "MoneroKeyImageExportInitAck\020\223\004\032\004\230\265\030\001\0224\n)"
      "MessageType_MoneroKeyImageSyncStepReques"
      "t\020\224\004\032\004\230\265\030\001\0220\n%MessageType_MoneroKeyImage"
      "SyncStepAck\020\225\004\032\004\230\265\030\001\0225\n*MessageType_Mone"
      "roKeyImageSyncFinalRequest\020\226\004\032\004\230\265\030\001\0221\n&M"
      "essageType_MoneroKeyImageSyncFinalAck\020\227\004"
      "\032\004\230\265\030\001\022\'\n\034MessageType_MoneroGetAddress\020\234"
      "\004\032\004\220\265\030\001\022$\n\031MessageType_MoneroAddress\020\235\004\032"
      "\004\230\265\030\001\022(\n\035MessageType_MoneroGetWatchKey\020\236"
      "\004\032\004\220\265\030\001\022%\n\032MessageType_MoneroWatchKey\020\237\004"
      "\032\004\230\265\030\001\022-\n\"MessageType_DebugMoneroDiagReq"
      "uest\020\242\004\032\004\220\265\030\001\022)\n\036MessageType_DebugMonero"
      "DiagAck\020\243\004\032\004\230\265\030\001\022,\n!MessageType_MoneroGe"
      "tTxKeyRequest\020\246\004\032\004\220\265\030\001\022(\n\035MessageType_Mo"
      "neroGetTxKeyAck\020\247\004\032\004\230\265\030\001\0224\n)MessageType_"
      "MoneroLiveRefreshStartRequest\020\250\004\032\004\220\265\030\001\0220"
      "\n%MessageType_MoneroLiveRefreshStartAck\020"
      "\251\004\032\004\230\265\030\001\0223\n(MessageType_MoneroLiveRefres"
      "hStepRequest\020\252\004\032\004\220\265\030\001\022/\n$MessageType_Mon"
      "eroLiveRefreshStepAck\020\253\004\032\004\230\265\030\001\0224\n)Messag"
      "eType_MoneroLiveRefreshFinalRequest\020\254\004\032\004"
      "\220\265\030\001\0220\n%MessageType_MoneroLiveRefreshFin"
      "alAck\020\255\004\032\004\230\265\030\001\022&\n\033MessageType_EosGetPubl"
      "icKey\020\330\004\032\004\220\265\030\001\022#\n\030MessageType_EosPublicK"
      "ey\020\331\004\032\004\230\265\030\001\022 \n\025MessageType_EosSignTx\020\332\004\032"
      "\004\220\265\030\001\022)\n\036MessageType_EosTxActionRequest\020"
      "\333\004\032\004\230\265\030\001\022%\n\032MessageType_EosTxActionAck\020\334"
      "\004\032\004\220\265\030\001\022\"\n\027MessageType_EosSignedTx\020\335\004\032\004\230"
      "\265\030\001\022(\n\035MessageType_BinanceGetAddress\020\274\005\032"
      "\004\220\265\030\001\022%\n\032MessageType_BinanceAddress\020\275\005\032\004"
      "\230\265\030\001\022*\n\037MessageType_BinanceGetPublicKey\020"
      "\276\005\032\004\220\265\030\001\022\'\n\034MessageType_BinancePublicKey"
      "\020\277\005\032\004\230\265\030\001\022$\n\031MessageType_BinanceSignTx\020\300"
      "\005\032\004\220\265\030\001\022\'\n\034MessageType_BinanceTxRequest\020"
      "\301\005\032\004\230\265\030\001\022)\n\036MessageType_BinanceTransferM"
      "sg\020\302\005\032\004\220\265\030\001\022&\n\033MessageType_BinanceOrderM"
      "sg\020\303\005\032\004\220\265\030\001\022\'\n\034MessageType_BinanceCancel"
      "Msg\020\304\005\032\004\220\265\030\001\022&\n\033MessageType_BinanceSigne"
      "dTx\020\305\005\032\004\230\265\030\001\0226\n+MessageType_WebAuthnList"
      "ResidentCredentials\020\240\006\032\004\220\265\030\001\022*\n\037MessageT"
      "ype_WebAuthnCredentials\020\241\006\032\004\230\265\030\001\0224\n)Mess"
      "ageType_WebAuthnAddResidentCredential\020\242\006"
      "\032\004\220\265\030\001\0227\n,MessageType_WebAuthnRemoveResi"
      "dentCredential\020\243\006\032\004\220\265\030\001:4\n\007wire_in\022!.goo"
      "gle.protobuf.EnumValueOptions\030\322\206\003 \001(\010:5\n"
      "\010wire_out\022!.google.protobuf.EnumValueOpt"
      "ions\030\323\206\003 \001(\010::\n\rwire_debug_in\022!.google.p"
      "rotobuf.EnumValueOptions\030\324\206\003 \001(\010:;\n\016wire"
      "_debug_out\022!.google.protobuf.EnumValueOp"
      "tions\030\325\206\003 \001(\010:6\n\twire_tiny\022!.google.prot"
      "obuf.EnumValueOptions\030\326\206\003 \001(\010:<\n\017wire_bo"
      "otloader\022!.google.protobuf.EnumValueOpti"
      "ons\030\327\206\003 \001(\010:8\n\013wire_no_fsm\022!.google.prot"
      "obuf.EnumValueOptions\030\330\206\003 \001(\010B4\n#com.sat"
      "oshilabs.trezor.lib.protobufB\rTrezorMess"
      "age"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8523);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2eproto
namespace hw {
namespace trezor {
namespace messages {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_messages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_messages_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 32:
    case 34:
    case 35:
    case 36:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 45:
    case 46:
    case 47:
    case 48:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 202:
    case 203:
    case 207:
    case 208:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 220:
    case 221:
    case 230:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 400:
    case 401:
    case 402:
    case 403:
    case 450:
    case 451:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 540:
    case 541:
    case 542:
    case 543:
    case 546:
    case 547:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 556:
    case 557:
    case 600:
    case 601:
    case 602:
    case 603:
    case 604:
    case 605:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 708:
    case 709:
    case 800:
    case 801:
    case 802:
    case 803:
    case 9001:
    case 9002:
    case 9003:
    case 9004:
    case 9005:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_in(kWireInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_out(kWireOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_in(kWireDebugInFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_debug_out(kWireDebugOutFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_tiny(kWireTinyFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_bootloader(kWireBootloaderFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  wire_no_fsm(kWireNoFsmFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace trezor
}  // namespace hw
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
